// <auto-generated />
using System;
using App.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622162132_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentSectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SysNotes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentSectorId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("App.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionString")
                        .HasColumnType("TEXT");

                    b.Property<string>("SysNotes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("App.Domain.UserSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("SectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SysNotes")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSectors");
                });

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.HasOne("App.Domain.Sector", "ParentSector")
                        .WithMany("Children")
                        .HasForeignKey("ParentSectorId");

                    b.Navigation("ParentSector");
                });

            modelBuilder.Entity("App.Domain.UserSector", b =>
                {
                    b.HasOne("App.Domain.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.User", "User")
                        .WithMany("UserSectors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("App.Domain.User", b =>
                {
                    b.Navigation("UserSectors");
                });
#pragma warning restore 612, 618
        }
    }
}
